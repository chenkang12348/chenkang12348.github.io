import{_ as n,c as s,o as a,e as p}from"./app.5f77e5d0.js";const g='{"title":"ES6+\u96C6\u5408","description":"","frontmatter":{"itle":"ES6+\u96C6\u5408","theme":"default","tag":"Javascript","time":"2021.11.10"},"headers":[{"level":2,"title":"ES6+\u96C6\u5408","slug":"es6-\u96C6\u5408"},{"level":3,"title":"\u5E38\u7528","slug":"\u5E38\u7528"},{"level":3,"title":"ES6","slug":"es6"},{"level":3,"title":"ES7","slug":"es7"},{"level":3,"title":"ES8","slug":"es8"},{"level":3,"title":"ES9","slug":"es9"},{"level":3,"title":"ES10","slug":"es10"},{"level":3,"title":"ES11","slug":"es11"},{"level":3,"title":"ES12","slug":"es12"},{"level":2,"title":"END","slug":"end"}],"relativePath":"views/article/Javascript/libs/20211112.md"}',t={},o=p(`<h2 id="es6-\u96C6\u5408" tabindex="-1">ES6+\u96C6\u5408 <a class="header-anchor" href="#es6-\u96C6\u5408" aria-hidden="true">#</a></h2><h3 id="\u5E38\u7528" tabindex="-1">\u5E38\u7528 <a class="header-anchor" href="#\u5E38\u7528" aria-hidden="true">#</a></h3><p>ES6 \u7684\u7279\u6027\u662F\u4F7F\u7528\u6700\u591A\u7684\uFF0C\u5305\u62EC\u7C7B\u3001\u6A21\u5757\u5316\u3001\u7BAD\u5934\u51FD\u6570\u3001\u51FD\u6570\u53C2\u6570\u9ED8\u8BA4\u503C\u3001\u6A21\u677F\u5B57\u7B26\u4E32\u3001\u89E3\u6784\u8D4B\u503C\u3001\u5EF6\u5C55\u64CD\u4F5C\u7B26\u3001Promise\u3001let \u4E0E const\u7B49\u7B49\uFF0C\u8FD9\u90E8\u5206\u5DF2\u7ECF\u662F\u5F00\u53D1\u5FC5\u5907\u4E86\uFF0C\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684</p><p>\u53E6\u5916\u8FD8\u6709\uFF1A</p><ul><li>ES7 \u7684 Array.prototype.includes()</li><li>ES8 \u7684 async/await \u3001String padding: padStart()\u548CpadEnd() \u3001 Object.values()</li><li>ES9 \u7684 Rest/Spread \u5C5E\u6027\u3001for await of\u3001 Promise.finally()</li><li>ES10 \u7684 Array.prototype.flat() \u3001 Array.prototype.flatMap() \u3001String\u7684 trimStart() trimEnd()</li><li>ES11 \u7684 Promise.allSettled \u3001\u7A7A\u503C\u5904\u7406\u53CA\u53EF\u9009\u94FE</li><li>ES12 \u7684\u903B\u8F91\u8D4B\u503C\u64CD\u4F5C\u7B26\u3001\u6570\u5B57\u5206\u9694\u7B26\u3001 Promise.any()</li></ul><h3 id="es6" tabindex="-1">ES6 <a class="header-anchor" href="#es6" aria-hidden="true">#</a></h3><ul><li>\u7C7B</li><li>\u6A21\u5757\u5316</li><li>\u7BAD\u5934\u51FD\u6570</li><li>\u51FD\u6570\u53C2\u6570\u9ED8\u8BA4\u503C</li><li>\u6A21\u677F\u5B57\u7B26\u4E32</li><li>\u89E3\u6784\u8D4B\u503C</li><li>\u6269\u5C55\u64CD\u4F5C\u7B26</li><li>\u5BF9\u8C61\u5C5E\u6027\u7B80\u5199</li><li>Promise</li><li>let \u4E0E const</li></ul><h3 id="es7" tabindex="-1">ES7 <a class="header-anchor" href="#es7" aria-hidden="true">#</a></h3><p>Array.prototype.includes()</p><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><p>\u6307\u6570\u64CD\u4F5C\u7B26</p><div class="language-js"><pre><code><span class="token number">2</span><span class="token operator">**</span><span class="token number">5</span> <span class="token comment">// 32</span>
</code></pre></div><h3 id="es8" tabindex="-1">ES8 <a class="header-anchor" href="#es8" aria-hidden="true">#</a></h3><p>async/await \u5F02\u6B65\u7EC8\u6781\u89E3\u51B3\u65B9\u6848</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// ... </span>
<span class="token punctuation">}</span>
</code></pre></div><p>Object.values()</p><div class="language-js"><pre><code>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token comment">// [1, 2, 3]</span>
</code></pre></div><p>Object.entries()</p><div class="language-js"><pre><code>Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token comment">// [[&quot;a&quot;, 1], [&quot;b&quot;, 2], [&quot;c&quot;, 3]]</span>
</code></pre></div><p>String padding: padStart()\u548CpadEnd()</p><ul><li>padStart() \u65B9\u6CD5\u7528\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u586B\u5145\u5F53\u524D\u5B57\u7B26\u4E32(\u5982\u679C\u9700\u8981\u7684\u8BDD\uFF0C\u4F1A\u91CD\u590D\u591A\u6B21)\uFF0C\u4EE5\u4FBF\u4EA7\u751F\u7684\u5B57\u7B26\u4E32\u8FBE\u5230\u7ED9\u5B9A\u7684\u957F\u5EA6\u3002\u4ECE\u5F53\u524D\u5B57\u7B26\u4E32\u7684\u5DE6\u4FA7\u5F00\u59CB\u586B\u5145</li></ul><div class="language-js"><pre><code><span class="token comment">// padStart</span>
<span class="token string">&#39;sister&#39;</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;0sister&quot;</span>
<span class="token comment">// padEnd</span>
<span class="token string">&#39;sister&#39;</span><span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;sister0&quot;</span>
</code></pre></div><p>Object.getOwnPropertyDescriptors()</p><ul><li>\u51FD\u6570\u7528\u6765\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u7684\u6240\u6709\u81EA\u8EAB\u5C5E\u6027\u7684\u63CF\u8FF0\u7B26\uFF0C\u5982\u679C\u6CA1\u6709\u4EFB\u4F55\u81EA\u8EAB\u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE\u7A7A\u5BF9\u8C61</li></ul><h3 id="es9" tabindex="-1">ES9 <a class="header-anchor" href="#es9" aria-hidden="true">#</a></h3><p>\u5F02\u6B65\u8FED\u4EE3\uFF08for await of\uFF09</p><ul><li>await \u53EF\u4EE5\u548C for\u2026of \u5FAA\u73AF\u4E00\u8D77\u4F7F\u7528\uFF0C\u4EE5\u4E32\u884C\u7684\u65B9\u5F0F\u8FD0\u884C\u5F02\u6B65\u64CD\u4F5C</li></ul><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getInfos</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getData</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Promise.finally()</p><ul><li>\u65E0\u8BBA Promise \u8FD0\u884C\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF0C\u90FD\u4F1A\u8FD0\u884C finally</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">getInfos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getData1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getData2<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Rest/Spread \u5C5E\u6027</p><div class="language-js"><pre><code><span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>values<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre></div><p>\u65B0\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u7279\u6027 <strong>\u6B63\u5219\u8868\u8FBE\u5F0F\u547D\u540D\u6355\u83B7\u7EC4\uFF08Regular Expression Named Capture Groups\uFF09</strong> \u5728\u4E00\u4E9B\u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\u4E2D\uFF0C\u4F7F\u7528\u6570\u5B57\u8FDB\u884C\u5339\u914D\u53EF\u80FD\u4F1A\u4EE4\u4EBA\u6DF7\u6DC6\u3002\u4F8B\u5982\uFF0C\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F /(\\d{4})-(\\d{2})-(\\d{2})/ \u6765\u5339\u914D\u65E5\u671F\u3002\u56E0\u4E3A\u7F8E\u5F0F\u82F1\u8BED\u4E2D\u7684\u65E5\u671F\u8868\u793A\u6CD5\u548C\u82F1\u5F0F\u82F1\u8BED\u4E2D\u7684\u65E5\u671F\u8868\u793A\u6CD5\u4E0D\u540C\uFF0C\u6240\u4EE5\u5F88\u96BE\u533A\u5206\u54EA\u4E00\u7EC4\u8868\u793A\u65E5\u671F\uFF0C\u54EA\u4E00\u7EC4\u8868\u793A\u6708\u4EFD</p><div class="language-js"><pre><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4})-(\\d{2})-(\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> match<span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;2019-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u2192 2019-01-01</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u2192 2019</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u2192 01</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u2192 01</span>
</code></pre></div><p>ES9\u5F15\u5165\u4E86\u547D\u540D\u6355\u83B7\u7EC4\uFF0C\u5141\u8BB8\u4E3A\u6BCF\u4E00\u4E2A\u7EC4\u5339\u914D\u6307\u5B9A\u4E00\u4E2A\u540D\u5B57\uFF0C\u65E2\u4FBF\u4E8E\u9605\u8BFB\u4EE3\u7801\uFF0C\u53C8\u4FBF\u4E8E\u5F15\u7528\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> match <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;2019-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>groups<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// \u2192 {year: &quot;2019&quot;, month: &quot;01&quot;, day: &quot;01&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>groups<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u2192 2019</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>groups<span class="token punctuation">.</span>month<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u2192 01</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>groups<span class="token punctuation">.</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// \u2192 01</span>
</code></pre></div><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u53CD\u5411\u65AD\u8A00\uFF08lookbehind\uFF09</p><div class="language-js"><pre><code><span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token string">&#39;hello sisteran&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;=sisteran\\s)hello</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [&quot;hello&quot;, index: 6, input: &quot;sisteran hello&quot;, groups: undefined]</span>
</code></pre></div><p>\u6B63\u5219\u8868\u8FBE\u5F0FdotAll\u6A21\u5F0F</p><ul><li>\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u70B9\uFF08.\uFF09\u662F\u4E00\u4E2A\u7279\u6B8A\u5B57\u7B26\uFF0C\u4EE3\u8868\u4EFB\u610F\u7684\u5355\u4E2A\u5B57\u7B26\uFF0C\u4F46\u662F\u6709\u4E24\u4E2A\u4F8B\u5916\u3002\u4E00\u4E2A\u662F\u56DB\u4E2A\u5B57\u8282\u7684 UTF-16 \u5B57\u7B26\uFF0C\u8FD9\u4E2A\u53EF\u4EE5\u7528u\u4FEE\u9970\u7B26\u89E3\u51B3\uFF1B\u53E6\u4E00\u4E2A\u662F\u884C\u7EC8\u6B62\u7B26,\u5982\u6362\u884C\u7B26(\\n)\u6216\u56DE\u8F66\u7B26(\\r),\u8FD9\u4E2A\u53EF\u4EE5\u901A\u8FC7ES9\u7684s(dotAll)flag\uFF0C\u5728\u539F\u6B63\u5219\u8868\u8FBE\u5F0F\u57FA\u7840\u4E0A\u6DFB\u52A0s\u8868\u793A:</li></ul><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo.bar</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;foo\\nbar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo.bar</span><span class="token regex-delimiter">/</span><span class="token regex-flags">s</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;foo\\nbar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><p>\u90A3\u5982\u4F55\u5224\u65AD\u5F53\u524D\u6B63\u5219\u662F\u5426\u4F7F\u7528\u4E86 dotAll \u6A21\u5F0F\u5462\uFF1F</p><div class="language-js"><pre><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo.bar</span><span class="token regex-delimiter">/</span><span class="token regex-flags">s</span></span> <span class="token comment">// Or, \`const re = new RegExp(&#39;foo.bar&#39;, &#39;s&#39;);\`.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;foo\\nbar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>dotAll<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>flags<span class="token punctuation">)</span> <span class="token comment">// &#39;s&#39; </span>
</code></pre></div><p>\u6B63\u5219\u8868\u8FBE\u5F0F Unicode \u8F6C\u4E49</p><ul><li>\u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684\u7C7B\u7684\u5199\u6CD5\\p{...}\u548C\\P{...}\uFF0C\u5141\u8BB8\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u7B26\u5408 Unicode \u67D0\u79CD\u5C5E\u6027\u7684\u6240\u6709\u5B57\u7B26</li></ul><p>\u975E\u8F6C\u4E49\u5E8F\u5217\u7684\u6A21\u677F\u5B57\u7B26\u4E32</p><ul><li>\u4E4B\u524D\uFF0C\\u\u5F00\u59CB\u4E00\u4E2A unicode \u8F6C\u4E49\uFF0C\\x\u5F00\u59CB\u4E00\u4E2A\u5341\u516D\u8FDB\u5236\u8F6C\u4E49\uFF0C\\\u540E\u8DDF\u4E00\u4E2A\u6570\u5B57\u5F00\u59CB\u4E00\u4E2A\u516B\u8FDB\u5236\u8F6C\u4E49\u3002\u8FD9\u4F7F\u5F97\u521B\u5EFA\u7279\u5B9A\u7684\u5B57\u7B26\u4E32\u53D8\u5F97\u4E0D\u53EF\u80FD\uFF0C\u4F8B\u5982Windows\u6587\u4EF6\u8DEF\u5F84 C:\\uuu\\xxx\\111\u3002</li></ul><h3 id="es10" tabindex="-1">ES10 <a class="header-anchor" href="#es10" aria-hidden="true">#</a></h3><p>\u65B0\u589E\u4E86Array\u7684 flat() \u65B9\u6CD5\u548C flatMap() \u65B9\u6CD5</p><ul><li>flat() \u548C flatMap() \u672C\u8D28\u4E0A\u5C31\u662F\u662F\u5F52\u7EB3\uFF08reduce\uFF09 \u4E0E \u5408\u5E76\uFF08concat\uFF09\u7684\u64CD\u4F5C</li></ul><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4]</span>

<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>a<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 4, 9, 16]</span>
</code></pre></div><p>\u65B0\u589E\u4E86String\u7684 trimStart() \u65B9\u6CD5\u548C trimEnd() \u65B9\u6CD5</p><ul><li>\u5206\u522B\u53BB\u9664\u5B57\u7B26\u4E32\u9996\u5C3E\u7A7A\u767D\u5B57\u7B26</li></ul><p>Object.fromEntries()</p><ul><li><p>\u8FD4\u56DE\u4E00\u4E2A\u7ED9\u5B9A\u5BF9\u8C61\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u7684\u952E\u503C\u5BF9\u6570\u7EC4 Object.fromEntries() \u662F Object.entries() \u7684\u53CD\u8F6C</p></li><li><p>\u901A\u8FC7 Object.fromEntries\uFF0C \u53EF\u4EE5\u5C06 Map \u8F6C\u5316\u4E3A Object:</p></li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { foo: &quot;bar&quot;, baz: 42 }</span>
</code></pre></div><p>\u901A\u8FC7 Object.fromEntries\uFF0C \u53EF\u4EE5\u5C06 Array \u8F6C\u5316\u4E3A Object:</p><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { 0: &quot;a&quot;, 1: &quot;b&quot;, 2: &quot;c&quot; }</span>
</code></pre></div><p>Symbol.prototype.description()</p><ul><li>\u53EA\u8BFB\u5C5E\u6027\uFF0C\u56DE Symbol \u5BF9\u8C61\u7684\u53EF\u9009\u63CF\u8FF0\u7684\u5B57\u7B26\u4E32\u3002</li></ul><div class="language-js"><pre><code><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>description<span class="token punctuation">;</span> <span class="token comment">// &#39;description&#39;</span>
</code></pre></div><p>Function.prototype.toString() \u73B0\u5728\u8FD4\u56DE\u7CBE\u786E\u5B57\u7B26\uFF0C\u5305\u62EC\u7A7A\u683C\u548C\u6CE8\u91CA</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token comment">/* comment */</span> foo <span class="token comment">/* another comment */</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u4E4B\u524D\u4E0D\u4F1A\u6253\u5370\u6CE8\u91CA\u90E8\u5206</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function foo(){}</span>

<span class="token comment">// ES2019 \u4F1A\u628A\u6CE8\u91CA\u4E00\u540C\u6253\u5370</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function /* comment */ foo /* another comment */ (){}</span>

<span class="token comment">// \u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">const</span> bar <span class="token comment">/* comment */</span> <span class="token operator">=</span> <span class="token comment">/* another comment */</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// () =&gt; {}</span>
</code></pre></div><p>\u7B80\u5316 try {} catch {} ,\u4FEE\u6539 catch \u7ED1\u5B9A</p><div class="language-js"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>or</p><div class="language-js"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><h3 id="es11" tabindex="-1">ES11 <a class="header-anchor" href="#es11" aria-hidden="true">#</a></h3><p>Promise.allSettled</p><ul><li>\u4E0E Promise.all \u4E0D\u540C\u7684\u662F\uFF0C\u5B83\u4F1A\u8FD4\u56DE\u6240\u6709\u7684 promise \u7ED3\u679C</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&#39;problem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u53EF\u9009\u94FE\uFF08Optional chaining\uFF09</p><ul><li>\u53EF\u8BA9\u6211\u4EEC\u5728\u67E5\u8BE2\u5177\u6709\u591A\u5C42\u7EA7\u7684\u5BF9\u8C61\u65F6\uFF0C\u4E0D\u518D\u9700\u8981\u8FDB\u884C\u5197\u4F59\u7684\u5404\u79CD\u524D\u7F6E\u6821\u9A8C\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> name <span class="token operator">=</span> user <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>info<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">var</span> age <span class="token operator">=</span> user <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>info<span class="token punctuation">.</span>getAge <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>info<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F88\u5BB9\u6613\u547D\u4E2D Uncaught TypeError: Cannot read property...</span>
<span class="token comment">// \u7528\u4E86 Optional Chaining \uFF0C\u4E0A\u9762\u4EE3\u7801\u4F1A\u53D8\u6210</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> user<span class="token operator">?.</span>info<span class="token operator">?.</span>name<span class="token punctuation">;</span>
<span class="token keyword">var</span> age <span class="token operator">=</span> user<span class="token operator">?.</span>info<span class="token operator">?.</span>getAge<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26\uFF08Nullish coalescing Operator\uFF09</p><ul><li>\u8BBE\u7F6E\u4E00\u4E2A\u9ED8\u8BA4\u7684\u503C</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> level <span class="token operator">=</span>  user<span class="token punctuation">.</span>data<span class="token punctuation">.</span>level <span class="token operator">||</span> <span class="token string">&#39;\u6682\u65E0\u7B49\u7EA7&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u6765\u770B\u770B\u7528\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26\u5982\u4F55\u5904\u7406</span>

<span class="token comment">// {</span>
<span class="token comment">//   &quot;level&quot;: 0   </span>
<span class="token comment">// }</span>
<span class="token keyword">var</span> level <span class="token operator">=</span> user<span class="token punctuation">.</span>level <span class="token operator">??</span> <span class="token string">&#39;\u6682\u65E0\u7B49\u7EA7&#39;</span><span class="token punctuation">;</span> <span class="token comment">// level -&gt; 0</span>


<span class="token comment">// {</span>
<span class="token comment">//   &quot;an_other_field&quot;: 0   </span>
<span class="token comment">// }</span>
<span class="token keyword">var</span> level <span class="token operator">=</span> user<span class="token punctuation">.</span>level <span class="token operator">??</span> <span class="token string">&#39;\u6682\u65E0\u7B49\u7EA7&#39;</span><span class="token punctuation">;</span> <span class="token comment">// level -&gt; &#39;\u6682\u65E0\u7B49\u7EA7&#39;</span>
</code></pre></div><p>import()</p><ul><li>\u6309\u9700\u52A0\u8F7D globalThis</li><li>globalThis \u76EE\u7684\u5C31\u662F\u63D0\u4F9B\u4E00\u79CD\u6807\u51C6\u5316\u65B9\u5F0F\u8BBF\u95EE\u5168\u5C40\u5BF9\u8C61\uFF0C\u6709\u4E86 globalThis \u540E\uFF0C\u4F60\u53EF\u4EE5\u5728\u4EFB\u610F\u4E0A\u4E0B\u6587\uFF0C\u4EFB\u610F\u65F6\u523B\u90FD\u80FD\u83B7\u53D6\u5230\u5168\u5C40\u5BF9\u8C61</li></ul><p>BigInt</p><ul><li>\u662F\u4E00\u79CD\u5185\u7F6E\u5BF9\u8C61\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u6CD5\u6765\u8868\u793A\u5927\u4E8E 253 - 1 \u7684\u6574\u6570\u3002\u8FD9\u539F\u672C\u662F Javascript\u4E2D\u53EF\u4EE5\u7528 Number \u8868\u793A\u7684\u6700\u5927\u6570\u5B57\u3002BigInt \u53EF\u4EE5\u8868\u793A\u4EFB\u610F\u5927\u7684\u6574\u6570</li></ul><p>String.prototype.matchAll()</p><ul><li>matchAll() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6240\u6709\u5339\u914D\u6B63\u5219\u8868\u8FBE\u5F0F\u53CA\u5206\u7EC4\u6355\u83B7\u7ED3\u679C\u7684\u8FED\u4EE3\u5668</li></ul><h3 id="es12" tabindex="-1">ES12 <a class="header-anchor" href="#es12" aria-hidden="true">#</a></h3><p>String.prototype.replaceAll()</p><ul><li>\u8FD4\u56DE\u4E00\u4E2A\u5168\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u6240\u6709\u7B26\u5408\u5339\u914D\u89C4\u5219\u7684\u5B57\u7B26\u90FD\u5C06\u88AB\u66FF\u6362\u6389</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;sisteran&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&#39;s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;qiqteran&#39;</span>
</code></pre></div><p>Promise.any()</p><ul><li><p>Promise.any() \u63A5\u6536\u4E00\u4E2APromise\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF08\u4F8B\u5982\u6570\u7EC4\uFF09\uFF0C</p></li><li><p>\u53EA\u8981\u5176\u4E2D\u7684\u4E00\u4E2A promise \u6210\u529F\uFF0C\u5C31\u8FD4\u56DE\u90A3\u4E2A\u5DF2\u7ECF\u6210\u529F\u7684 promise</p></li><li><p>\u5982\u679C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u6CA1\u6709\u4E00\u4E2A promise \u6210\u529F\uFF08\u5373\u6240\u6709\u7684 promises \u90FD\u5931\u8D25/\u62D2\u7EDD\uFF09\uFF0C\u5C31\u8FD4\u56DE\u4E00\u4E2A\u5931\u8D25\u7684 promise</p></li></ul><p>WeakRef</p><ul><li>\u4F7F\u7528WeakRefs\u7684Class\u7C7B\u521B\u5EFA\u5BF9\u5BF9\u8C61\u7684\u5F31\u5F15\u7528(\u5BF9\u5BF9\u8C61\u7684\u5F31\u5F15\u7528\u662F\u6307\u5F53\u8BE5\u5BF9\u8C61\u5E94\u8BE5\u88ABGC\u56DE\u6536\u65F6\u4E0D\u4F1A\u963B\u6B62GC\u7684\u56DE\u6536\u884C\u4E3A) \u903B\u8F91\u8D4B\u503C\u64CD\u4F5C\u7B26\uFF08Logical Assignment Operators\uFF09</li></ul><div class="language-js"><pre><code>a <span class="token operator">||=</span> b
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
a <span class="token operator">=</span> a <span class="token operator">||</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span>

a <span class="token operator">&amp;&amp;=</span> b
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
a <span class="token operator">=</span> a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span>

a <span class="token operator">??=</span> b
<span class="token comment">//\u7B49\u4EF7\u4E8E</span>
a <span class="token operator">=</span> a <span class="token operator">??</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span>
</code></pre></div><p>\u6570\u5B57\u5206\u9694\u7B26\uFF08Numeric separators\uFF09</p><div class="language-js"><pre><code><span class="token keyword">const</span> money <span class="token operator">=</span> <span class="token number">1_000_000_000</span> <span class="token comment">// 1000000000</span>
</code></pre></div><h2 id="end" tabindex="-1">END <a class="header-anchor" href="#end" aria-hidden="true">#</a></h2><hr>`,97),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{g as __pageData,f as default};
