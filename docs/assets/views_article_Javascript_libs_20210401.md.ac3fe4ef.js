import{_ as n,c as s,o as a,e as t}from"./app.5f77e5d0.js";const f='{"title":"x !== x","description":"","frontmatter":{"title":"x !== x","theme":"default","tag":"Javascript","time":"2021.04.01"},"headers":[{"level":2,"title":"x !== x","slug":"x-x"},{"level":3,"title":"1\u3001\u201Cx !== x\u201D\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F","slug":"_1\u3001\u201Cx-x\u201D\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F"},{"level":3,"title":"2\u3001(!isNaN(x) && x !== x) \u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F","slug":"_2\u3001-isnan-x-x-x-\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F"},{"level":3,"title":"3\u3001\u5982\u4F55\u4F7F\u201Cx === x + 1\u201D\uFF1F","slug":"_3\u3001\u5982\u4F55\u4F7F\u201Cx-x-1\u201D\uFF1F"},{"level":3,"title":"4\u3001 \u201Cx > x\u201D\u53EF\u4EE5\u662F\u771F\u7684\u5417\uFF1F","slug":"_4\u3001-\u201Cx-x\u201D\u53EF\u4EE5\u662F\u771F\u7684\u5417\uFF1F"},{"level":3,"title":"5\u3001 typeof x === \u2018undefined\u2019 && x.length > 0 ?","slug":"_5\u3001-typeof-x-\u2018undefined\u2019-x-length-0"},{"level":2,"title":"END","slug":"end"}],"relativePath":"views/article/Javascript/libs/20210401.md"}',p={},o=t(`<h2 id="x-x" tabindex="-1">x !== x <a class="header-anchor" href="#x-x" aria-hidden="true">#</a></h2><h3 id="_1\u3001\u201Cx-x\u201D\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F" tabindex="-1">1\u3001\u201Cx !== x\u201D\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F <a class="header-anchor" href="#_1\u3001\u201Cx-x\u201D\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">?</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">NaN</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_2\u3001-isnan-x-x-x-\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F" tabindex="-1">2\u3001(!isNaN(x) &amp;&amp; x !== x) \u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F <a class="header-anchor" href="#_2\u3001-isnan-x-x-x-\u53EF\u4EE5\u8FD4\u56DEtrue\u5417\uFF1F" aria-hidden="true">#</a></h3><p>\u5F53\u8FC7\u6EE4\u6389\u201CNaN\u201D\u65F6\uFF0C\u8FD8\u6709\u4EC0\u4E48\u503C\u53EF\u4EE5\u8BA9\u4E00\u4E2A\u503C\u4E0D\u7B49\u4E8E\u81EA\u5DF1\u5462\uFF1F</p><div class="language-js"><pre><code>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">?</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>Object.Defineproperty</li></ul><div class="language-js"><pre><code>
window<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// Any value is OK</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// 0.12259077808826002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_3\u3001\u5982\u4F55\u4F7F\u201Cx-x-1\u201D\uFF1F" tabindex="-1">3\u3001\u5982\u4F55\u4F7F\u201Cx === x + 1\u201D\uFF1F <a class="header-anchor" href="#_3\u3001\u5982\u4F55\u4F7F\u201Cx-x-1\u201D\uFF1F" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">?</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> x <span class="token operator">=</span>  Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4\u3001-\u201Cx-x\u201D\u53EF\u4EE5\u662F\u771F\u7684\u5417\uFF1F" tabindex="-1">4\u3001 \u201Cx &gt; x\u201D\u53EF\u4EE5\u662F\u771F\u7684\u5417\uFF1F <a class="header-anchor" href="#_4\u3001-\u201Cx-x\u201D\u53EF\u4EE5\u662F\u771F\u7684\u5417\uFF1F" aria-hidden="true">#</a></h3><div class="language-js"><pre><code>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">?</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>Symbol.toPrimitive</li></ul><div class="language-js"><pre><code>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span> Symbol<span class="token punctuation">.</span>toPrimitive <span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_5\u3001-typeof-x-\u2018undefined\u2019-x-length-0" tabindex="-1">5\u3001 typeof x === \u2018undefined\u2019 &amp;&amp; x.length &gt; 0 ? <a class="header-anchor" href="#_5\u3001-typeof-x-\u2018undefined\u2019-x-length-0" aria-hidden="true">#</a></h3><div class="language-js"><pre><code>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">?</span> <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9664\u4E86 undefined \u672C\u8EAB\uFF0C\u8FD8\u6709\u4EC0\u4E48\u503C\u53EF\u4EE5\u8BA9 typeof x === undefined\u201D \u4E3A\u771F\u5462\uFF1F\u7B54\u6848\u662Fdocument. All\uFF0C\u5305\u542B\u6587\u6863\u4E2D\u6BCF\u4E2A\u5143\u7D20\u7684 HTMLAllCollection</p><div class="language-js"><pre><code><span class="token keyword">const</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span>all <span class="token comment">// Please fill in the value of &quot;x?</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="end" tabindex="-1">END <a class="header-anchor" href="#end" aria-hidden="true">#</a></h2><hr>`,22),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{f as __pageData,h as default};
