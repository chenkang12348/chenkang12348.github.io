import{_ as n,c as s,o as a,e as t}from"./app.7383dfe8.js";var p="/assets/20220617091335.0fe86f10.jpg",o="/assets/20220617091756.6c8d38b0.jpg",e="/assets/20220617091951.ade91791.jpg",c="/assets/20220617092433.b7a5e973.jpg",r="/assets/20220617092637.2f0d23a8.jpg",l="/assets/20220617092925.28b8af86.jpg";const _='{"title":"\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B","description":"","frontmatter":{"itle":"\u3010TS\u3011typeof\u64CD\u4F5C\u7B26","theme":"default","tag":"Javascript","time":"2021.11.19"},"headers":[{"level":3,"title":"\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B","slug":"\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B"},{"level":3,"title":"\u5904\u7406enum\u7C7B\u578B","slug":"\u5904\u7406enum\u7C7B\u578B"},{"level":3,"title":"\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B","slug":"\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B"},{"level":3,"title":"\u5904\u7406class","slug":"\u5904\u7406class"},{"level":3,"title":"\u914D\u5408const\u65AD\u8A00\uFF08TypeScript 3.4)","slug":"\u914D\u5408const\u65AD\u8A00\uFF08typescript-3-4"},{"level":2,"title":"END","slug":"end"}],"relativePath":"views/article/Javascript/libs/20220106.md"}',u={},k=t(`<h3 id="\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B" tabindex="-1">\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B <a class="header-anchor" href="#\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> lolo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lolo&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
  <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">province</span><span class="token operator">:</span> <span class="token string">&quot;\u798F\u5EFA&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&quot;\u53A6\u95E8&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">province</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>\u5C42\u7EA7\u5D4C\u5957\u8F83\u6DF1\u65F6 typeof \u64CD\u4F5C\u7B26\uFF1A</li></ul><div class="language-js"><pre><code>type Person <span class="token operator">=</span> <span class="token keyword">typeof</span> lolo<span class="token punctuation">;</span>
type Address <span class="token operator">=</span> <span class="token keyword">typeof</span> lolo<span class="token punctuation">[</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><p><img src="`+p+`" alt=""></p><h3 id="\u5904\u7406enum\u7C7B\u578B" tabindex="-1">\u5904\u7406enum\u7C7B\u578B <a class="header-anchor" href="#\u5904\u7406enum\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">enum</span> HttpMethod <span class="token punctuation">{</span>
  Get<span class="token punctuation">,</span>
  Post<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> HttpMethod<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">HttpMethod</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    HttpMethod<span class="token punctuation">[</span>HttpMethod<span class="token punctuation">[</span><span class="token string">&quot;Get&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Get&quot;</span><span class="token punctuation">;</span>
    HttpMethod<span class="token punctuation">[</span>HttpMethod<span class="token punctuation">[</span><span class="token string">&quot;Post&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Post&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>HttpMethod <span class="token operator">||</span> <span class="token punctuation">(</span>HttpMethod <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u53EF\u4EE5\u5BF9\u679A\u4E3E\u7C7B\u578B\u4F7F\u7528typeof\u64CD\u4F5C\u7B26\uFF0C\u5904\u7406\u679A\u4E3E\u7C7B\u578B\u65F6\uFF0C\u4E00\u822C\u642D\u914Dkeyof\u64CD\u4F5C\u7B26</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token keyword">typeof</span> HttpMethod <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Get</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Post</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

type Method <span class="token operator">=</span> keyof <span class="token keyword">typeof</span> HttpMethod<span class="token punctuation">;</span> <span class="token comment">// &quot;Get&quot; | &quot;Post&quot;</span>
</code></pre></div><p><img src="`+o+`" alt=""></p><ul><li>\u7531\u4EE5\u4E0A\u7ED3\u679C\u53EF\u77E5\uFF0C\u5229\u7528 keyof \u548C typeof \u64CD\u4F5C\u7B26\uFF0C\u4F60\u5C31\u53EF\u4EE5\u83B7\u53D6\u679A\u4E3E\u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u540D\u3002</li></ul><h3 id="\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B" tabindex="-1">\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B <a class="header-anchor" href="#\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type AddType <span class="token operator">=</span> <span class="token keyword">typeof</span> add<span class="token punctuation">;</span> <span class="token comment">// (a: number, b: number) =&gt; number</span>
type AddReturnType <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>AddType<span class="token operator">&gt;</span> <span class="token comment">// number</span>
type AddParamsType <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span>AddType<span class="token operator">&gt;</span> <span class="token comment">// [a: number, b: number]</span>
</code></pre></div><ul><li>TypeScript \u5185\u7F6E\u7684 ReturnType \u548C Parameters \u5DE5\u5177\u7C7B\u578B\u6765\u5206\u522B\u83B7\u53D6\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u548C\u53C2\u6570\u7C7B\u578B\uFF1A <img src="`+e+`" alt=""></li></ul><h3 id="\u5904\u7406class" tabindex="-1">\u5904\u7406class <a class="header-anchor" href="#\u5904\u7406class" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// new (x: number, y: number) =&gt; Point</span>
<span class="token keyword">function</span> <span class="token function">createPoint</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">Constructor</span><span class="token operator">:</span> <span class="token keyword">typeof</span> Point<span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><img src="`+c+`" alt=""></p><blockquote><p>\u5728\u4EE5\u4E0A\u4EE3\u7801\u4E2D\uFF0CcreatePoint \u662F\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570\uFF0C\u7528\u4E8E\u5FEB\u901F\u521B\u5EFA Point \u7C7B\u7684\u5B9E\u4F8B\u3002\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\uFF0C\u4F60\u5C31\u53EF\u4EE5\u83B7\u53D6 Point \u7C7B\u5BF9\u5E94\u7684\u6784\u9020\u7B7E\u540D\uFF0C\u4ECE\u800C\u5B9E\u73B0\u76F8\u5E94\u7684\u7C7B\u578B\u6821\u9A8C\u3002\u5728\u5B9A\u4E49 Constructor \u53C2\u6570\u7C7B\u578B\u65F6\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528 typeof \u64CD\u4F5C\u7B26\u7684\u8BDD\uFF0C\u5C06\u4F1A\u51FA\u73B0\u4EE5\u4E0B\u9519\u8BEF\u4FE1\u606F\uFF1A</p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">createPoint</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">Constructor</span><span class="token operator">:</span> Point<span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Error\uFF1A\u7C7B\u578B &quot;Point&quot; \u6CA1\u6709\u6784\u9020\u7B7E\u540D\u3002ts(2351)</span>
<span class="token punctuation">}</span>

</code></pre></div><p><img src="`+r+`" alt=""></p><h3 id="\u914D\u5408const\u65AD\u8A00\uFF08typescript-3-4" tabindex="-1">\u914D\u5408const\u65AD\u8A00\uFF08TypeScript 3.4) <a class="header-anchor" href="#\u914D\u5408const\u65AD\u8A00\uFF08typescript-3-4" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> requestMethod <span class="token operator">=</span> <span class="token string">&quot;Get&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> requestMethod2 <span class="token operator">=</span> <span class="token string">&quot;Get&quot;</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

type <span class="token constant">R0</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> requestMethod<span class="token punctuation">;</span> <span class="token comment">// string</span>
type <span class="token constant">R1</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> requestMethod2<span class="token punctuation">;</span> <span class="token comment">// &quot;Get&quot;</span>

<span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">666</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u963F\u5B9D\u54E5&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> user2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">666</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u963F\u5B9D\u54E5&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token comment">// { id: number; name: string; }</span>
type <span class="token constant">U0</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> user<span class="token punctuation">;</span>
<span class="token comment">// type U1 = { readonly id: 666; readonly name: &quot;\u963F\u5B9D\u54E5&quot;; }</span>
type <span class="token constant">U1</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> user2<span class="token punctuation">;</span>
</code></pre></div><p><img src="`+l+'" alt=""></p><ul><li>\u7531\u4EE5\u4E0A\u7ED3\u679C\u53EF\u77E5\uFF0C\u4F7F\u7528 const \u65AD\u8A00\u4E4B\u540E\uFF0C\u518D\u5229\u7528 typeof \u64CD\u4F5C\u7B26\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u83B7\u5F97\u66F4\u7CBE\u786E\u7684\u7C7B\u578B\u3002</li></ul><h2 id="end" tabindex="-1">END <a class="header-anchor" href="#end" aria-hidden="true">#</a></h2><hr>',26),i=[k];function d(y,m,h,g,f,b){return a(),s("div",null,i)}var w=n(u,[["render",d]]);export{_ as __pageData,w as default};
